// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model USER{
  id String @id @default(uuid())
  name String
  email_id String
  password String
  created_on DateTime @default(now())
  update_on DateTime @default(now())

  @@index(fields: [ email_id(sort:Desc)])
}

// model Ai_mails_info{
//   msg_id String @unique @id 
//   chain_id String 
//   user_ids String[]
//   to String?
//   from String 
//   cc String?
//   bcc String?
//   subject String
//   in_reply_to String
//   received_date DateTime
//   message_id String
//   created_on DateTime @default(now())
//   @@index(fields:[received_date(sort:Desc),message_id])
// }

// model mail_body{
//   msg_id String @unique @id 
//   chain_id String 
//   in_reply_to String
//   refrences String[]
//   htmlBody String
//   textBody String 
//   textAsHtml String
//   attachments String[]
//   created_on DateTime @default(now())
//   @@index(fields:[created_on(sort:Desc),chain_id])
// }

model Ai_mails_info {
  msg_id        String      @unique @id
  chain_id      String
  user_ids      String[]
  to            String?
  from          String
  cc            String?
  bcc           String?
  subject       String?
  in_reply_to   String?
  received_date DateTime
  message_id    String
  created_on    DateTime    @default(now())

  // Reference the relation from mail_body
  mailBody      mail_body? 
  @@index(fields: [received_date(sort: Desc), message_id])
}

model mail_body {
  msg_id        String       @unique @id
  chain_id      String
  in_reply_to   String?
  refrences     String[]
  htmlBody      String
  textBody      String
  textAsHtml    String
  attachments   String[]
  created_on    DateTime     @default(now())

  // Define the relation field that references Ai_mails_info
  ai_mail_info  Ai_mails_info @relation(fields: [msg_id], references: [msg_id])

  @@index(fields: [created_on(sort: Desc), chain_id])
}

model credentials{
  id String  @default(uuid()) @unique @id
  authId String @unique
  password String
  createdOn DateTime @default(now())
  lastUpdated DateTime @default(now())
  @@index(fields: [authId(sort:Desc)])
}   

model test_table{
  id String @unique @id @default(uuid())
  jsonobject Json
}


